from django.urls import path
from .views import (
    BrandRepresentativeDetail,
    BrandRepresentativeEdit,
    SellerRepresentativeDetail,
    SellerRepresentativeEdit,
    brand_representative_login,
    brand_representative_logout,
    seller_representative_login,
    seller_representative_logout,
    BrandEdit,
    SellerEdit,
    ImageBannerList,
    ImageBannerCreate,
    ImageBannerGet,
    ImageBannerDelete,
    ImageBannerUpdate,
    VideoBannerList,
    VideoBannerGet,
    VideoBannerDelete,
    VideoBannerUpdate,
    VideoBannerCreate,
    StateLimitRemove,
    CityLimitRemove,
    FullProductCreate,
    ProductDetailCreate,
    ProductDetailEdit,
    BrandList,
    CategoryList,
    SellerList,
    EditQuestionAndAnswer,
    DisableAnswer,
    EnableAnswer,
    ListQuestionAndAnswerOfSeller,
    ProductsPurchasedOfSeller,
    OrderOfSeller,
    OrderStatusChangeBySeller,
    PartnerCreate,
    PartnerEdit,
    PartnerList,
)

urlpatterns = [
    path("partner-create/", PartnerCreate.as_view()),
    path("partner/", PartnerEdit.as_view()),
    path("partner-list/", PartnerList.as_view()),
    path("brand-representative/", BrandRepresentativeDetail.as_view()),
    path("brand-representative-edit/", BrandRepresentativeEdit.as_view()),
    path("seller-representative/", SellerRepresentativeDetail.as_view()),
    path("seller-representative-edit/", SellerRepresentativeEdit.as_view()),
    path("brand-representative-login/", brand_representative_login),
    path("brand-representative-logout/", brand_representative_logout),
    path("seller-representative-login/", seller_representative_login),
    path("seller-representative-logout/", seller_representative_logout),
    path("image-banner-list/", ImageBannerList.as_view()),
    path("image-banner-create/", ImageBannerCreate.as_view()),
    path("image-banner-get/", ImageBannerGet.as_view()),
    path("image-banner-delete/<int:pk>/", ImageBannerDelete.as_view()),
    path("image-banner-update/<int:pk>/", ImageBannerUpdate.as_view()),
    path("video-banner-list/", VideoBannerList.as_view()),
    path("video-banner-create/", VideoBannerCreate.as_view()),
    path("video-banner-get/", VideoBannerGet.as_view()),
    path("video-banner-delete/<int:pk>/", VideoBannerDelete.as_view()),
    path("video-banner-update/<int:pk>/", VideoBannerUpdate.as_view()),
    path("brand-edit/", BrandEdit.as_view()),
    path("seller-edit/", SellerEdit.as_view()),
    path(
        "state-remove/<int:pk>/", StateLimitRemove.as_view()
    ),  # from seller state-limit
    path("city-remove/<int:pk>/", CityLimitRemove.as_view()),  # from seller city-limit
    path("full-product-create/", FullProductCreate.as_view()),
    path("detail-product-create/", ProductDetailCreate.as_view()),
    path("detail-product-edit/<int:pk>/", ProductDetailEdit.as_view()),
    path("brand-list/", BrandList.as_view()),
    path("category-list/", CategoryList.as_view()),
    path("seller-list/", SellerList.as_view()),
    path("question-and-answer-edit/<int:pk>/", EditQuestionAndAnswer.as_view()),
    path("question-and-answer-disable/<int:pk>/", DisableAnswer.as_view()),
    path("question-and-answer-enable/<int:pk>/", EnableAnswer.as_view()),
    path("products-purchased-of-seller/<int:pk>/", ProductsPurchasedOfSeller.as_view()),
    path("question-and-answer-list/", ListQuestionAndAnswerOfSeller.as_view()),
    path("order-list-of-seller/<int:pk>/", OrderOfSeller.as_view()),
    path("orderstatus-change-of-seller/<int:pk>/", OrderStatusChangeBySeller.as_view()),
]
